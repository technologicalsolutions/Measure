@using Measure.Enums
@using Measure.ViewModels.Respuesta
@using Measure.ViewModels.Usuario

@model ViewAnswerSurvey

@{
    ViewUser login = HttpContext.Current.Session["login"] as ViewUser;
    ViewBag.Title = "ResponderEncuesta";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
    string imgSrc = Model.Cliente.Imagen == null ? Url.Content("~/Content/images/logo_login.png") : string.Format("data:image/gif;base64,{0}", Convert.ToBase64String(Model.Cliente.Imagen));
    string Color = string.IsNullOrEmpty(Model.Cliente.Color) ? "#000" : Model.Cliente.Color;
    string Display = string.Empty;
    string Nombre = string.Empty;
    string Descript = string.Empty;
}
@Styles.Render("~/Content/select2")
@section style{
    <style>
        .bkg{
            background-color: @Color;
        }
        .htmlContent{
            text-align:center
        }
        .htmlContent img {
            width: 80%
        }
    </style>
    @foreach (var item in Model.Lista)
    {
        if (item.Categoria != null)
        {
            string style = ".custom-" + item.Categoria.Group.Color.Replace("#", "") + ".nav-link.active";
            string style1 = ".custom-" + item.Categoria.Group.Color.Replace("#", "") + ".nav-link.active:after";
            <style>
            .wizard-primary.sw-theme-arrows > .nav @style  {
                background: @item.Categoria.Group.Color !important;
                border-color: @item.Categoria.Group.Color !important;
            }
            .wizard-primary.sw-theme-arrows > .nav @style1 {
                border-left-color: @item.Categoria.Group.Color !important;
            }
            </style>
        }
    }
}
@section scriptsHead{
    @Scripts.Render("~/bundles/select2")
}
<div class="row pt-2">
    <div class="col-12 align-self-start">
        <img src="@imgSrc" class="main-profile-img" />
    </div>
</div>
<div class="row pt-2" id="contenidoPreguntas">
    <div class="col-12">
        <div style="display:none" id="HiddenProgress">
            <div class="progress" style="height: 40px;">
                <div class="progress-bar progress-bar-striped progress-bar-animated bg-danger" style="font-size: x-large; text-align: center;" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" id="ProgesEnd">@Measure.Recursos.Recurso.ProgresBar</div>
            </div>
        </div>
        <div id="Encuesta" class="wizard wizard-primary sw sw-theme-default sw-justified mt-3" style="width:100%">
            <ul class="nav">
                @foreach (var item in Model.Lista)
                {
                    if (item.Inicio != null)
                    {
                        <li class="nav-item">
                            <a class="custom-end nav-link" href="#@item.Inicio.Id"></a>
                        </li>
                    }
                    else if (item.ActulizarUsuario != null)
                    {
                        <li class="nav-item" id="LiUpdateUser">
                            <a class="custom-end nav-link" id="tabUpdateUser" href="#UpdateUser"></a>
                        </li>
                    }
                    else if (item.Categoria != null)
                    {
                        <li class="nav-item">
                            <a class="custom-@item.Categoria.Group.Color.Replace("#","") nav-link" href="#@item.Categoria.Group.Id.ToString()"></a>
                        </li>
                    }
                    else if (item.Grabar != null)
                    {
                        <li class="nav-item">
                            <a class="custom-end nav-link" id="tabRespuesta-tab" href="#Respuesta-tab"></a>
                        </li>
                    }
                    else if (item.Fin != null)
                    {
                        <li class="nav-item">
                            <a class="custom-end nav-link" href="#@item.Fin.Id"></a>
                        </li>
                    }
                }
            </ul>
            <div class="tab-content">
                @foreach (var item in Model.Lista)
                {
                    if (item.Inicio != null)
                    {
                        <div id="@item.Inicio.Id" class="tab-pane" role="tabpanel">
                            <div class="row mt-2" role="tabpanel">
                                <div class="col-12 htmlContent">
                                    @Html.Raw(item.Inicio.Html)
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12 text-end">
                                    <button class="btn btn-pill btn-dark btn-lg custom-backgroun-1" id="prev-btn" onclick="Prev()">
                                        <i class="align-middle me-2 fas fa-fw fa-angle-left"></i>
                                        <span class="align-middle">@Measure.Recursos.Recurso.Antes</span>
                                    </button>
                                    <button class="btn btn-pill btn-dark btn-lg custom-backgroun-1" id="next-btn" onclick="next()">
                                        <span class="align-middle">@Measure.Recursos.Recurso.Siguiente</span>
                                        <i class="align-middle me-2 fas fa-fw fa-angle-right">  </i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                    else if (item.ActulizarUsuario != null)
                    {
                        <div id="UpdateUser" class="tab-pane" role="tabpanel">
                            <div class="row">
                                <div class="col-12 TituloPregunta">
                                    <strong>
                                        @{
                                            Nombre = login.Idioma == (int)Idiomas.es_ES ? item.ActulizarUsuario.Group.es_Es : login.Idioma == (int)Idiomas.en_US ? item.ActulizarUsuario.Group.en_US : item.ActulizarUsuario.Group.pt_BR;
                                        }
                                        @Nombre
                                    </strong>
                                </div>
                                <div class="row mt-2" role="tabpanel">
                                    @Html.Partial("_UpdateUser", item.ActulizarUsuario)
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12 text-end">
                                    <button class="btn btn-pill btn-dark btn-lg custom-backgroun-1" id="prev-btn" onclick="Prev()">
                                        <i class="align-middle me-2 fas fa-fw fa-angle-left"></i>
                                        <span class="align-middle">@Measure.Recursos.Recurso.Antes</span>
                                    </button>
                                    <button class="btn btn-pill btn-dark btn-lg custom-backgroun-1" id="next-btn" onclick="next()">
                                        <span class="align-middle">@Measure.Recursos.Recurso.Siguiente</span>
                                        <i class="align-middle me-2 fas fa-fw fa-angle-right">  </i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                    else if (item.Categoria != null)
                    {
                        <div id="@item.Categoria.Group.Id.ToString()" class="tab-pane" role="tabpanel">
                            <div class="row">
                                <div class="col-12 TituloPregunta">
                                    <strong>
                                        @{
                                            Nombre = login.Idioma == (int)Idiomas.es_ES ? item.Categoria.Group.es_Es : login.Idioma == (int)Idiomas.en_US ? item.Categoria.Group.en_US : item.Categoria.Group.pt_BR;
                                        }
                                        @Nombre
                                    </strong>
                                </div>
                                <div class="row mt-2" role="tabpanel">
                                    @foreach (var Question in item.Categoria.Preguntas)
                                    {
                                        switch ((TipoDeControl)Question.Question.TipoControl)
                                        {
                                            case TipoDeControl.ControlAbierto:
                                                <div class="col-md-@item.Categoria.Group.Columnas col-12">
                                                    <div class="row mt-1 @Question.ControlesAbiertos.Id">
                                                        <div class="col-12">
                                                            <strong>@Question.Question.Texto</strong>
                                                        </div>
                                                        <div class="col-12">
                                                            @Html.Partial("_ControlAbierto", Question.ControlesAbiertos)
                                                        </div>
                                                    </div>
                                                </div>
                                                break;
                                            case TipoDeControl.ControlBooleano:
                                                <div class="col-md-@item.Categoria.Group.Columnas col-sm-6 col-12">
                                                    <div class="row mt-1 @Question.ControlesBooleanos.Id">
                                                        <div class="col-12">
                                                            <strong>@Question.Question.Texto</strong>
                                                        </div>
                                                        <div class="col-12">
                                                            @Html.Partial("_ControlBooleano", Question.ControlesBooleanos)
                                                        </div>
                                                    </div>
                                                </div>
                                                break;
                                            case TipoDeControl.ControlCerrado:
                                                Display = Question.ControlesCerrados.PadreId != null ? "none" : "block";
                                                <div class="col-md-@item.Categoria.Group.Columnas col-12 R_@Question.ControlesCerrados.Id" style="display:@Display">
                                                    <div class="row mt-1">
                                                        <div class="col-12">
                                                            <strong>@Question.Question.Texto</strong>
                                                        </div>
                                                        <div class="col-12">
                                                            @Html.Partial("_ControlCerrado", Question.ControlesCerrados)
                                                        </div>
                                                    </div>
                                                </div>
                                                break;
                                            case TipoDeControl.ControlMatriz:
                                                <div class="col-md-@item.Categoria.Group.Columnas col-12 ">
                                                    <div class="card-body">
                                                        <div class="row mt-1 @Question.ControlesMatrices.ControlM.Id">
                                                            <div class="col-12">
                                                                <strong>@Question.Question.Texto</strong>
                                                            </div>
                                                            <div class="col-12">
                                                                @Html.Partial("_ControlMatriz", Question.ControlesMatrices)
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                break;
                                        }
                                    }
                                    <div class="row mt-3">
                                        <div class="col-12 TituloPregunta">
                                            <label>
                                                @{
                                                    Descript = login.Idioma == (int)Idiomas.es_ES ? item.Categoria.Group.Desc_es_Es : login.Idioma == (int)Idiomas.en_US ? item.Categoria.Group.Desc_en_US : item.Categoria.Group.Desc_pt_BR;
                                                }
                                                @Descript
                                            </label>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-12 text-end">
                                            <button class="btn btn-pill btn-dark btn-lg custom-backgroun-1" id="prev-btn" onclick="Prev()">
                                                <i class="align-middle me-2 fas fa-fw fa-angle-left"></i>
                                                <span class="align-middle">@Measure.Recursos.Recurso.Antes</span>
                                            </button>
                                            <button class="btn btn-pill btn-dark btn-lg custom-backgroun-1" id="next-btn" onclick="next()">
                                                <span class="align-middle">@Measure.Recursos.Recurso.Siguiente</span>
                                                <i class="align-middle me-2 fas fa-fw fa-angle-right">  </i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else if (item.Grabar != null)
                    {
                        <div id="Respuesta-tab" class="tab-pane" role="tabpanel">
                            <div class="row">
                                <div class="col-12 text-center">
                                    <div class="mt-7 ms-7 mb-7 me-7 respuesta">
                                        @Html.Raw(item.Grabar.Html)
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12 text-center">
                                    <button class="btn btn-pill btn-dark btn-lg custom-backgroun-1" id="prev-btn" onclick="Prev()">
                                        <i class="align-middle me-2 fas fa-fw fa-angle-left"></i>
                                        <span class="align-middle">@Measure.Recursos.Recurso.Antes</span>
                                    </button>
                                    <button class="btn btn-pill btn-lg custom-backgroun-2 text-center" id="respuesta-btn" onclick="Guardar()" style="display:none">
                                        <i class="align-middle me-2 fas fa-fw fa-check"></i>
                                        @Measure.Recursos.Recurso.Confirmar
                                    </button>
                                    <button class="btn btn-pill btn-lg custom-backgroun-2 text-center continuar" id="continuar-btn" style="display:none" onclick="next()">
                                        @Measure.Recursos.Recurso.Continuar
                                        <i class="align-middle me-2 fas fa-fw fa-angle-right"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                    else if (item.Fin != null)
                    {
                        <div id="@item.Fin.Id" class="tab-pane" role="tabpanel">
                            <div class="row mt-2" role="tabpanel">
                                <div class="col-12 htmlContent">
                                    @Html.Raw(item.Fin.Html)
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>
@using (Html.BeginRouteForm("GuardarEncuesta", FormMethod.Post, new { id = "FrmGuardar" }))
{
    <input type="hidden" id="IdAsignacion" value="@Model.Asignacion.Id" />
    <input type="hidden" name="Json" id="save" />
}
@section scripts{
    <script type="text/javascript">
        var StateProgress = 0;

        $(document).ready(function () {
            $("#Encuesta").smartWizard({
                theme: "arrows",
                showStepURLhash: false,
                toolbarSettings: {
                    showNextButton: false,
                    showPreviousButton: false,
                }
            });

            $('select').select2({
                "width": 'resolve',
                "theme": "bootstrap-5",
                "language": SelectedTranslate,
            });

            $("#Encuesta").on("showStep", function (e, anchorObject, stepNumber, stepDirection, stepPosition) {
                $("#prev-btn").removeAttr('disabled');
                $("#next-btn").removeAttr('disabled');
                $("#next-btn").show();
                $("#respuesta-btn").hide();
                if (stepPosition === 'first') {
                    $("#prev-btn").attr('disabled');
                } else if (stepPosition === 'middle' && anchorObject[0].href.includes('Respuesta-tab')) {
                    $("#respuesta-btn").show();
                } else {
                    $("#prev-btn").removeAttr('disabled');
                    $("#next-btn").removeAttr('disabled');
                }
            });
        });

        function Prev() {
            window.scrollTo(0, 0);
            $('#Encuesta').smartWizard("prev");
        }

        function next() {
            window.scrollTo(0, 0);
            $('#Encuesta').smartWizard("next");
        }

        function CreateItemSlider() {
            var rangeInputs = document.querySelectorAll('input[type="range"]');
            rangeInputs.forEach(input => {
                input.addEventListener('input', handleInputChange)
            })
        }

        function handleInputChange(e) {
            let TotalBackground = (e.target.value - e.target.min) * 100 / (e.target.max - e.target.min);
            e.target.style.backgroundSize = (TotalBackground <= 40 ? TotalBackground + 1 : TotalBackground - 1).toString() + '% 100%';
            e.target.style.backgroundImage = 'linear-gradient(#00c0de, #00c0de)';
        }

        function ToastError(message) {
            var type = 'danger';
            var duration = '5000';
            var ripple = true;
            var dismissible = true;
            var positionX = 'center';
            var positionY = 'top';
            window.notyf.open({
                type,
                message,
                duration,
                ripple,
                dismissible,
                position: {
                    x: positionX,
                    y: positionY
                }
            });
        }

        function Guardar() {
            var dataR = Array();

            var validate = '';
            var ResultUpdate = $(".update");
            var UpdateUser = {};

            $.each(ResultUpdate, function (pos, item) {
                if (item.className.includes('confirm')) {
                    if (item.value == "") {
                        validate = 'Debe completar los campos requeridos *'
                        return false;
                    }
                }
                UpdateUser[item.id] = item.value;
            });

            if (UpdateUser.hasOwnProperty('ConfirmarCorreoTrabajo')) {
                if (UpdateUser['CorreoTrabajo'] != UpdateUser['ConfirmarCorreoTrabajo']) {
                    validate = 'Los correos no son iguales';
                } else {
                    dataR.push(UpdateUser);
                }
            }

            if (validate != '') {
                console.log(UpdateUser);
                $.each($("#Encuesta ul .nav-item"), function (pos, item) {
                    if (item.id == 'LiUpdateUser') {
                        $('#Encuesta').smartWizard("goToStep", pos);
                        return false;
                    }
                })
                ToastError(validate);
            } else {
                var ResultOpen = $('.abierto');
                var ControlOpen = Array();
                $.each(ResultOpen, function (pos, item) {
                    var index = ControlOpen.findIndex(i => i["Id"] == item.dataset.caid);
                    if (index == -1) {
                        ControlOpen.push({
                            'Id': item.dataset.caid,
                            'TipoControl': @((int)TipoDeControl.ControlAbierto),
                            'Respuesta': [item.value]
                        });
                    } else {
                        ControlOpen[index].Respuesta.push(item.value);
                    }
                });

                var ResultBool = $('.booleano');
                var ControlBool = Array();
                $.each(ResultBool, function (pos, item) {
                    var index = ControlBool.findIndex(i => i["Id"] == ResultBool.id);
                    if (index == -1) {
                        ControlBool.push({
                            'Id': ResultBool.id,
                            'TipoControl': @((int)TipoDeControl.ControlBooleano),
                            'Respuesta': $(item).val()
                        });
                    } else {
                        ControlBool[index].Respuesta = $(item).val();
                    }
                });

                var ResultClosed = $('.cerrado')
                var ControlClosed = Array();
                $.each(ResultClosed, function (pos, item) {
                    var respuesta = Array();

                    switch (parseInt(item.dataset.subcontrol)) {
                        case 0:
                            var select = $(item).find('select');
                            respuesta.push($(select).val());
                            break;
                        case 1:
                        case 2:
                        case 3:
                            var Name = "[name=" + item.dataset.crid + "]:checked";
                            var Value = $(Name).val();
                            if (Value == -1 || Value == "-1") {
                                Value = document.getElementById(item.dataset.crid).value;
                            }
                            if (Value != undefined && Value != "") {
                                respuesta.push(Value);
                            }
                            break;
                        case 4:
                        case 5:
                            var checkbox = $(item).find(':checkbox');
                            var Seleccionados = '';
                            $.each(checkbox, function (postc, itemc) {
                                if (itemc.checked) {
                                    Seleccionados += itemc.dataset.val + "|";
                                }
                            });
                            Seleccionados = Seleccionados.substring(0, Seleccionados.length - 1);
                            respuesta.push(Seleccionados);
                            break;
                    }

                    var index = ControlClosed.findIndex(i => i["Id"] == item.dataset.maid);
                    if (index == -1) {
                        ControlClosed.push({
                            'Id': item.dataset.crid,
                            'TipoControl': @((int)TipoDeControl.ControlCerrado),
                            'SubControl': item.dataset.subcontrol,
                            'Respuesta': respuesta
                        });
                    } else {
                        ControlClosed.Respuesta = respuesta;
                    }
                });

                var ResultMatrix = $(".matriz");
                var ControlMatriz = Array();
                $.each(ResultMatrix, function (posi, item) {
                    var respuestas = [];
                    var filasMatriz = $(item)[0].tBodies[0].rows;
                    var columnasMatriz = $(item)[0].tHead.rows[0].cells;

                    $.each(filasMatriz, function (posf, filaItem) {
                        var Seleccionados = '';
                        var Name = '';
                        var IntoName = item.dataset.maid + '_';
                        if (item.dataset.radio != "range") {
                            for (var a = 1; a < columnasMatriz.length; a++) {
                                if (item.dataset.radio == "radio") {
                                    IntoName += a + "_" + posf;
                                    Name = "[name=" + IntoName + "]:checked";
                                    respuestas.push($(Name).val());
                                    break;
                                }
                                else {
                                    if (document.getElementById(IntoName).checked) {
                                        Seleccionados += filaItem.cells[a].firstElementChild.value + "|";
                                    }
                                }
                            }
                        } else {
                            IntoName += (columnasMatriz.length - 1) + "_" + posf;
                            Name = "[name=" + IntoName + "]";
                            respuestas.push($(Name).val());
                        }

                        if (item.dataset.radio == "checkbox") {
                            Seleccionados = Seleccionados.substring(0, Seleccionados.length - 1);
                            respuestas.push(Seleccionados);
                        }
                    });

                    var index = ControlMatriz.findIndex(i => i["Id"] == item.dataset.maid);
                    if (index == -1) {
                        ControlMatriz.push({
                            'Id': item.dataset.maid,
                            'TipoControl': @((int)TipoDeControl.ControlMatriz),
                            'SubControl': item.dataset.radio == "radio" ? 'false': 'true',
                            'Respuesta': respuestas
                        });
                    } else {
                        ControlMatriz[index].Respuesta = respuestas;
                    }
                });

                if (ControlOpen.length > 0) {
                    $.each(ControlOpen, function (pos, item) {
                        dataR.push(item);
                    });
                }
                if (ControlBool.length > 0) {
                    $.each(ControlBool, function (pos, item) {
                        dataR.push(item);
                    });
                }
                if (ControlClosed.length > 0) {
                    $.each(ControlClosed, function (pos, item) {
                        dataR.push(item);
                    });
                }
                if (ControlMatriz.length > 0) {
                    $.each(ControlMatriz, function (pos, item) {
                        dataR.push(item);
                    });
                }
                var data = {
                    'IdUsuario': $("#BtnLogOut").val(),
                    'IdEncuesta': '@Model.Asignacion.EncuestaId',
                    'IdAsignacion': '@Model.Asignacion.Id',
                    'Respuestas': dataR,
                    'Update': UpdateUser
                };

                $("#save").val(JSON.stringify(data));
                $("#continuar-btn").show();
                $('#Encuesta').smartWizard("next");
                $("#HiddenProgress").show();

                ProgressEnd();
            }
        }

        function ProgressEnd() {
            var end = 1500;

            if (StateProgress == 0) {

                StateProgress = 1;
                var width = 1;
                var id = setInterval(frame, 10);

                function frame() {
                    if (width >= end) {
                        clearInterval(id);
                        StateProgress = 0;
                        $("#FrmGuardar").submit();
                    } else {
                        width++;
                        var percentaje = ((width * 100) / end);

                        $("#ProgesEnd").attr("aria-valuenow", percentaje + '%');
                        $("#ProgesEnd").css('width', percentaje + '%');
                    }
                }
            }
        }

    </script>
}
@section scriptsPost{
    @foreach (var item in Model.Lista)
    {
        if (item.Categoria != null)
        {
            foreach (var SubItem in item.Categoria.Preguntas)
            {
                if ((TipoDeControl)SubItem.Question.TipoControl == TipoDeControl.ControlMatriz)
                {
                    if ((ControlMatriz)SubItem.ControlesMatrices.ControlM.TipoControl == ControlMatriz.range)
                    {
                        <script type="text/javascript">
                            document.addEventListener("DOMContentLoaded", function () {
                                CreateItemSlider();
                            })
                        </script>
                    }
                }
            }
        }
    }
}