@model Measure.ViewModels.Usuario.ViewUsuario
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = ViewBag.Accion + " Aliado";
}
@section style{
    @Styles.Render("~/Content/select2")
}
@section scriptsHead{
    @Scripts.Render("~/bundles/select2")
}
<div class="container">
    <div class="row">
        <div class="d-flex align-items-center p-2 my-2 text-white rounded shadow-sm custom-backgroun-2">
            <img class="me-2" src="@Url.Content("~/Content/images/Icono.png")" width="36">
            <div class="lh-1">
                <h1 class="h3 mb-0 text-white lh-1">@ViewBag.Title</h1>
            </div>
        </div>
    </div>
    @using (Html.BeginRouteForm("AccionesAliado", FormMethod.Post, new { enctype = "multipart/form-data", id = "FrmUser" }))
    {
        <div class="row mt-2">
            @Html.AntiForgeryToken()
            @Html.HiddenFor(modelo => modelo.Accion)
            @Html.HiddenFor(modelo => modelo.Modelo.Id)
            @Html.HiddenFor(modelo => modelo.Modelo.RolId)
            @if (Model.FindUser.RolId == (int)Measure.Enums.UserRol.Administrador)
            {
                <div class="col-12 col-md-6 mt-2">
                    <div class="form-group">
                        <label class="control-label col-md-2">@Measure.Recursos.Recurso.RolCliente</label>
                        <div class="col-md-10">
                            <select class="form-select" data-init-plugin="select2" name="Modelo.ClienteId" id="Clientes" onchange="LoadAliado(this.value);">
                                @foreach (var item in Model.Clientes)
                                {
                                    <option value="@item.Value" @(item.Selected ? "selected" : string.Empty)>@item.Text</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="col-12 col-md-6 mt-2">
                    <div class="form-group">
                        <label class="control-label col-md-2">@Measure.Recursos.Recurso.RolAliado</label>
                        <div class="col-md-10">
                            <select class="form-select" data-init-plugin="select2" name="Modelo.AliadoId" id="Modelo_ClienteId" required>
                                @foreach (var item in Model.Aliados)
                                {
                                    <option value="@item.Value" @(item.Selected ? "selected" : string.Empty)>@item.Text</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
            }            
            else
            {
                @Html.HiddenFor(modelo => modelo.Modelo.ClienteId);                
            }
            <div class="col-12 col-md-6 mt-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.Modelo.Correo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @if (Model.Accion != 0)
                        {
                            @Html.EditorFor(model => model.Modelo.Correo, new { htmlAttributes = new { @class = "form-control", @type = "email", @readonly = "ReadOnly", required = "required" } })
                        }
                        else
                        {
                            @Html.EditorFor(model => model.Modelo.Correo, new { htmlAttributes = new { @class = "form-control", @type = "email", required = "required" } })
                        }
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-6 mt-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.Modelo.Clave, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Modelo.Clave, new { htmlAttributes = new { @class = "form-control", @type = "password", required = "required" } })
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-6 mt-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.Modelo.Nombres, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Modelo.Nombres, new { htmlAttributes = new { @class = "form-control", required = "required", @onkeypress = "TextAndWhiteOnly(event);" } })
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-6 mt-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.Modelo.Apellidos, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Modelo.Apellidos, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-6 mt-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.Modelo.Idioma, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Modelo.Idioma", Model.Idiomas, htmlAttributes: new { @class = "form-select", data_init_plugin = "select2", required = "required" })
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-6 mt-2">
                <div class="form-group">
                    <label class="control-label col-md-2">Pais</label>
                    <div class="col-md-10">
                        @Html.DropDownList("Modelo.PaisId", Model.Paises, htmlAttributes: new { @class = "form-select", data_init_plugin = "select2", required = "required" })
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-6 mt-2 mt-4">
                <div class="form-check">
                    @Html.RadioButtonFor(m => m.Modelo.Estado, true, new { @class = "form-check-input" })
                    <label class="form-check-label" for="flexCheckChecked">
                        @Measure.Recursos.Recurso.EstadoActivo
                    </label>
                </div>
                <div class="form-check">
                    @Html.RadioButtonFor(m => m.Modelo.Estado, false, new { @class = "form-check-input" })
                    <label class="form-check-label" for="flexCheckChecked">
                        @Measure.Recursos.Recurso.EstadoInactivo
                    </label>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12 col-sm-4 mt-4 text-center">
                <button class="btn btn-success" type="submit"><i class="bi-save"></i> Guardar</button>
            </div>
            <div class="col-12 col-sm-4 mt-4 text-center">
                <button class="btn btn-danger" type="reset"><i class="bi-x-square"></i> Cancelar</button>
            </div>
            <div class="col-12 col-sm-4 mt-4 text-center">
                <button class="btn btn-primary" type="button" onclick="BackForm()"><i class="bi-skip-backward"></i> a la lista</button>
            </div>
        </div>
    }
</div>
<div style="display:none">
    @Html.ValidationSummary("", new { @id = "errores" })
</div>
<div style="display:none">
    @using (Html.BeginRouteForm("Usuarios", FormMethod.Get, new { id = "FrmBack" })) { }
</div>
@section ModalSection{
    <div class="modal" tabindex="-1" id="Preview">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Previsualizar Imagen 300 x 300 px</h5>
                    <button type="button" class="btn-close" onclick="CloseModal('Preview')"></button>
                </div>
                <div class="modal-body">
                    <img src="" class="rounded mx-auto d-block" width="300" height="300" id="imageResize" />
                </div>
            </div>
        </div>
    </div>
}
@section scripts{
    <script src="@Measure.Recursos.Recurso.LenguajeSelectScript" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('select').select2({
                "theme": "bootstrap-5",
                "language": SelectedTranslate
            });

            var errores = '';
            $.each($("#errores ul li"), function (pos, item) {
                if (item.style.display != "none") {
                    errores += errores.length > 0 ? '\n' + item.textContent : item.textContent;
                }
            })

            if (errores != '') {
                ToastError(errores);
            }

        });

        function LoadAliado(ClienteId) {
            if (ClienteId != '0' ) {
                $.ajax({
                    url: '@Url.Action("BuscarAliados", "Usuario")',
                    method: 'Post',
                    data: { 'ClienteId': ClienteId },
                    success: function (result) {
                        var Html = '<option value="0">Seleccione...</option>';
                        $.each(result, function (pos, item) {
                            Html += '<option value="' + item.Value + '" >' + item.Text + '</option>';
                        });
                        $("#Modelo_ClienteId").html(Html);

                        $("#Modelo_ClienteId").select2("destroy");
                        $("#Modelo_ClienteId").select2({
                            "width": 'resolve',
                            "theme": "bootstrap-5",
                            "language": SelectedTranslate
                        });

                    },
                    error: function (Error) {
                        console.log(Error);
                    }
                });
            }
        }

        function AsignarValor(obj) {
            document.getElementById(obj.name).value = obj.value;
        }

        function BackForm() {
            $("#FrmBack").submit();
        }

        function ToastError(message) {
            var type = 'danger';
            var duration = '5000';
            var ripple = true;
            var dismissible = true;
            var positionX = 'center';
            var positionY = 'top';
            window.notyf.open({
                type,
                message,
                duration,
                ripple,
                dismissible,
                position: {
                    x: positionX,
                    y: positionY
                }
            });
        }
    </script>
}
