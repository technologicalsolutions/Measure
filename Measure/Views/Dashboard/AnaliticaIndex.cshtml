@using Measure.ViewModels.Dashboard
@model ViewAnaliticIndex
@{
    ViewBag.DashShow = "show";
    ViewBag.DsTActive = "active";
    ViewBag.Title = "Analitica";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section style{
    @Styles.Render("~/Content/select2")
    <style>
        .input-container {
            background-color: #ffffff;
            border: solid;
            border-color: #000;
            border-width: 0.5px;
            border-radius: 5px;
            height: 36px;
            position: relative;
        }

        .inptext {
            background-color: transparent;
            border: none;
            color: #000000;
            height: inherit;
            outline: none;
            padding-left: 12px;
            position: absolute;
            z-index: 3;
        }

        .suggestion {
            align-items: center;
            color: #868686;
            display: flex;
            height: inherit;
            left: 0;
            padding-left: 12px;
            position: absolute;
            top: 0;
            width: inherit;
            z-index: 2;
        }
    </style>
}
@section scriptsHead{
    @Scripts.Render("~/bundles/select2")
    @Scripts.Render("~/bundles/unobtrusive")
}
<div class="container">
    <div id="smartwizard" class="wizard wizard-primary mb-4 sw sw-theme-default sw-justified">
        <ul class="nav">
            <li class="nav-item">
                <a class="nav-link" href="#step-1">
                    <div class="num">Paso 1</div>
                    <small>Seleccionar Población</small>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#step-2">
                    <div class="num">Paso 2</div>
                    <small>Seleccionar Filtros A graficar</small>
                </a>
            </li>
        </ul>
        <div class="tab-content">
            <div id="step-1" class="tab-pane" role="tabpanel" aria-labelledby="step-1">
                <div class="row">
                    @if (Model.User.RolId == (int)Measure.Enums.UserRol.Administrador)
                    {
                        <div class="col-12 col-md-3">
                            <div class="form-group">
                                <label class="control-label col-md-2">Clientes</label>
                                <select class="form-select" data-init-plugin="select2" id="Modelo_ClienteId" onchange="LoadItems(this.value)">
                                    @foreach (var item in Model.Clientes)
                                    {
                                        <option value="@item.Value" @(item.Selected ? "selected" : string.Empty)>@item.Text</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-12 col-md-3">
                            <div class="form-group">
                                <label class="control-label">Encuestas</label>
                                <select class="form-select" data-init-plugin="select2" id="Encuestas" name="Modelo_EncuestaId" onchange="Selected(this)">
                                    @foreach (var item in Model.Encuestas)
                                    {
                                        <option value="@item.Value" @(item.Selected ? "selected" : string.Empty)>@item.Text</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-12 col-md-3">
                            <div class="form-group">
                                <label class="control-label col-md-2">Aliados</label>
                                <select class="form-select" data-init-plugin="select2" id="Aliados" name="Modelo_AliadoId" onchange="Selected(this)">
                                    @foreach (var item in Model.Aliados)
                                    {
                                        <option value="@item.Value" @(item.Selected ? "selected" : string.Empty)>@item.Text</option>
                                    }
                                </select>
                            </div>
                        </div>
                        using (Ajax.BeginForm("ListaDeEncuestados", "Dashboard", FormMethod.Post, new AjaxOptions
                        {
                            InsertionMode = InsertionMode.Replace,
                            UpdateTargetId = "ListUser",
                            OnBegin = "divLoading",
                            OnComplete = "loadSelect"
                        }, new { @class = "col-12 col-md-3 text-center", id = "FrmList" }))
                        {
                            <div class="row">
                                <div class="col-6">
                                    <input type="hidden" name="IdEncuesta" id="Modelo_EncuestaId" value="@(Model.Encuestas.Count() > 0 ? Model.Encuestas[0].Value : string.Empty)" />
                                    <input type="hidden" name="IdAliado" id="Modelo_AliadoId" />
                                    <button class="btn btn-info mt-4" id="BtnList" type="submit">Ver Encuestados</button>
                                </div>
                                <div class="col-6" id="divFiltro" style="display:none">
                                    <button class="btn btn-primary mt-4" type="button" onclick="GenerarDataAnalisis()">Generar Filtros</button>
                                </div>
                            </div>
                        }
                    }
                    else if (Model.User.RolId == (int)Measure.Enums.UserRol.Cliente)
                    {
                        <div class="col-12 col-md-3">
                            <div class="form-group">
                                <label class="control-label">Encuestas</label>
                                <select class="form-select" data-init-plugin="select2" id="Encuestas" name="Modelo_EncuestaId" onchange="Selected(this)">
                                    @foreach (var item in Model.Encuestas)
                                    {
                                        <option value="@item.Value" @(item.Selected ? "selected" : string.Empty)>@item.Text</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-12 col-md-6">
                            <div class="form-group">
                                <label class="control-label">Aliados</label>
                                <select class="form-select" data-init-plugin="select2" id="Aliados" name="Modelo_AliadoId" onchange="Selected(this)">
                                    @foreach (var item in Model.Aliados)
                                    {
                                        <option value="@item.Value" @(item.Selected ? "selected" : string.Empty)>@item.Text</option>
                                    }
                                </select>
                            </div>
                        </div>
                        using (Ajax.BeginForm("ListaDeEncuestados", "Dashboard", FormMethod.Post, new AjaxOptions
                        {
                            InsertionMode = InsertionMode.Replace,
                            UpdateTargetId = "ListUser",
                            OnBegin = "divLoading",
                            OnComplete = "loadSelect"
                        }, new { @class = "col-12 col-md-3 text-center", id = "FrmList" }))
                        {
                            <div class="row">
                                <div class="col-6">
                                    <input type="hidden" name="IdEncuesta" id="Modelo_EncuestaId" value="@(Model.Encuestas.Count() > 0 ? Model.Encuestas[0].Value : string.Empty)" />
                                    <input type="hidden" name="IdAliado" id="Modelo_AliadoId" />
                                    <button class="btn btn-info mt-4" id="BtnList" type="submit">Ver Encuestados</button>
                                </div>
                                <div class="col-6" id="divFiltro" style="display:none">
                                    <button class="btn btn-primary mt-4" type="button" onclick="GenerarDataAnalisis()">Generar Filtros</button>
                                </div>
                            </div>
                        }
                    }
                </div>
                <div class="row mt-4" id="Encuestados">
                    <div class="col-12">
                        <div class="table-responsive-lg" id="ListUser">
                            @Html.Partial("_ListaEncuestados", Model.PartialIndex)
                        </div>
                    </div>
                </div>
            </div>
            <div id="step-2" class="tab-pane" role="tabpanel" aria-labelledby="step-2">
                <div class="row" id="Filtro">
                    <div class="col-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label class="control-label col-md-2">Pais</label>
                            <select class="form-select" data-init-plugin="select2" id="Pais"></select>
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label class="control-label col-md-2">Sucursal</label>
                            <select class="form-select" data-init-plugin="select2" id="Sucursal"></select>
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label class="control-label col-md-2">Gerencia</label>
                            <select class="form-select" data-init-plugin="select2" id="Gerencia"></select>
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label class="control-label col-md-2">Rol</label>
                            <select class="form-select" data-init-plugin="select2" id="Rol"></select>
                        </div>
                    </div>
                </div>
                <div class="row justify-content-md-end">
                    <div class="col-12 col-sm-6 col-md-3">
                        <label class="control-label">Tipo De Analisis</label>
                        <select class="form-select" data-init-plugin="select2" id="TipoDeAnalisis">
                            <option value="0">Seleccione...</option>
                            <option value="1">Cuadro Uno</option>
                            <option value="2">Cuadro Dos</option>
                        </select>
                    </div>
                    <div class="col-12 col-sm-6 col-md-3  text-center">
                        <button class="btn btn-primary mt-4" type="button" onclick="Filter()">Graficar Filtro</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row invisible">
    @using (Html.BeginRouteForm("GenerarAnalisis", FormMethod.Post, new { Id = "FrmAnalisis" }))
    {
        <input type="hidden" id="Data" name="Data" />
    }
</div>
<div id="loader" style=" display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: url(@Url.Content("~/Content/images/Loader.gif")) center no-repeat, #fff;
        z-index: 1000;
     ">
</div>
@section styleFoot{
    @Styles.Render("~/Content/apx")
}
@section scripts{
    @if (Model.User.RolId == (int)Measure.Enums.UserRol.Administrador)
    {
        <script src="@Measure.Recursos.Recurso.LenguajeSelectScript" type="text/javascript"></script>
        <script type="text/javascript">
             $(document).ready(function () {
                $('select').select2({
                    "width": 'resolve',
                    "theme": "bootstrap-5",
                    "language": SelectedTranslate,
                });
                 $('#smartwizard').smartWizard({
                     showStepURLhash: false,
                     toolbarSettings: {
                         showNextButton: false,
                         showPreviousButton: false,
                     }
                 });
            });

            function LoadItems(ClienteId) {

                if (ClienteId != "0") {
                    var params = {
                        'ClienteId': ClienteId
                    };

                    $.ajax({
                        data: params,
                        url: '@Url.Action("BuscarAliados", "Usuario")',
                        type: "GET",
                        async: false,
                        success: function (data) {
                            $("#Modelo_AliadoId").html("");

                            var Html = '';
                            $.each(data, function (pos, item){
                                Html += '<option value="' + item.Value+'" ';
                                Html += '>' + item.Text+'</option>';
                            });
                            $("#Modelo_AliadoId").html(Html);

                            $("#Modelo_AliadoId").select2("destroy");
                            $("#Modelo_AliadoId").select2({
                                "width": 'resolve',
                                "theme": "bootstrap-5",
                                "language": SelectedTranslate
                            });
                        },
                        error: function(data) {
                            console.log(data);
                        },
                    });

                    $.ajax({
                        data: params,
                        url: '@Url.Action("ListaEncuestas", "Encuestas")',
                        type: "GET",
                        async: false,
                        success: function (data) {
                            $("#Modelo_EncuestaId").html("");

                            var Html = '';
                            $.each(data, function (pos, item){
                                Html += '<option value="' + item.Value+'" ';
                                Html += '>' + item.Text+'</option>';
                            });
                            $("#Modelo_EncuestaId").html(Html);

                            $("#Modelo_EncuestaId").select2("destroy");
                            $("#Modelo_EncuestaId").select2({
                                "width": 'resolve',
                                "theme": "bootstrap-5",
                                "language": SelectedTranslate
                            });
                        },
                        error: function(data) {
                            console.log(data);
                        },
                    });
                }
            }
        </script>
    }
    <script type="text/javascript">
        var Paises = @Html.Raw(Json.Encode(Model.Paises));
        var Sucursales = Array();
        var Gerencias = Array();
        var Roles = Array();
        var Data = Array();

        function onBlur(Obj) {
            var Id = $(Obj).data("id");
            var rol = Obj.classList.value;
            var index = -1;

            if (Obj.value != '') {
                if (rol.includes("rol")) {
                    index = Roles.findIndex(f => f.Id == Id);
                } else if (rol.includes("sucursal")) {
                    index = Sucursales.findIndex(f => f.Id == Id);
                } else {
                    index = Gerencias.findIndex(f => f.Id == Id);
                }

                if (index == -1) {
                    if (rol.includes("rol")) {
                        Roles.push({
                            'Id': Id,
                            'Text': Obj.value
                        });
                    } else if (rol.includes("sucursal")) {
                        Sucursales.push({
                            'Id': Id,
                            'Text': Obj.value
                        });
                    } else {
                        Gerencias.push({
                            'Id': Id,
                            'Text': Obj.value
                        });
                    }
                } else {
                    if (rol.includes("rol")) {
                        Roles[index]['Text'] = Obj.value;
                    } else if (rol.includes("sucursal")) {
                        Sucursales[index]['Text'] = Obj.value;
                    } else {
                        Gerencias[index]['Text'] = Obj.value;
                    }
                }

                if (!Obj.parentElement.parentElement.parentElement.cells[0].firstElementChild.checked) {
                    Obj.parentElement.parentElement.parentElement.cells[0].firstElementChild.checked = true;
                    $(Obj.parentElement.parentElement.parentElement).addClass("selected");
                }
            } else {
                if (rol.includes("rol")) {
                    index = Roles.findIndex(f => f.Id == Id);
                } else if (rol.includes("sucursal")) {
                    index = Sucursales.findIndex(f => f.Id == Id);
                } else {
                    index = Gerencias.findIndex(f => f.Id == Id);
                }

                if (index > -1) {
                    if (rol.includes("rol")) {
                        Roles.splice(index, 1);
                    } else if (rol.includes("sucursal")) {
                        Sucursales.splice(index, 1);
                    } else {
                        Gerencias.splice(index, 1);
                    }
                }

                if (Obj.parentElement.parentElement.parentElement.cells[0].firstElementChild.checked) {
                    Obj.parentElement.parentElement.parentElement.cells[0].firstElementChild.checked = false;
                    $(Obj.parentElement.parentElement.parentElement).removeClass("selected");
                }
            }

            var span = (rol ? "#rol_" : "#rgerencia_") + Id;
            $(span).html('');
        }

        function OnKeyUp(Obj) {
            var Id = $(Obj).data("id");
            var rol = Obj.classList.value;

            var text = '';
            if (Obj.value != '') {
                let regex = new RegExp("^" + Obj.value, "i");
                var item = null;
                if (rol.includes("rol")) {
                    item = Roles.find(f => regex.test(f.Text));
                } else if (rol.includes("sucursal")) {
                    item = Sucursales.find(f => regex.test(f.Text));
                } else {
                    item = Gerencias.find(f => regex.test(f.Text));
                }
                text = item != undefined ? item['Text'] : '';
            }

            var span = "";
            if (rol.includes("rol")) {
                span = "#rol_";
            } else if (rol.includes("sucursal")) {
                span = "#sucursal_";
            } else {
                span = "#gerencia_";
            }
            $(span + Id).html(text)
        }

        function Validate() {
            var result = '';

            if ($("#Aliados").val() == "0") {
                result += 'Debe seleccionar un alido';
            } else {
                var Seleccionados = $('.chkValidate:checked');
                var error = 0;

                if (Seleccionados.length == 0) {
                    result = "Debe seleccionar algun encuestado.";
                } else {
                    $.each(Seleccionados, function (pos, item) {
                        if (item.parentElement.parentElement.cells[5].firstElementChild.firstElementChild.value == '') {
                            item.parentElement.parentElement.cells[5].firstElementChild.style.borderColor = "red";
                            error++;
                        } else {
                            item.parentElement.parentElement.cells[5].firstElementChild.style.borderColor = "black";
                        }
                        if (item.parentElement.parentElement.cells[6].firstElementChild.firstElementChild.value == '') {
                            item.parentElement.parentElement.cells[6].firstElementChild.style.borderColor = "red";
                            error++;
                        } else {
                            item.parentElement.parentElement.cells[6].firstElementChild.style.borderColor = "black";
                        }
                        if (item.parentElement.parentElement.cells[7].firstElementChild.firstElementChild.value == '') {
                            item.parentElement.parentElement.cells[7].firstElementChild.style.borderColor = "red";
                            error++;
                        } else {
                            item.parentElement.parentElement.cells[6].firstElementChild.style.borderColor = "black";
                        }
                    })

                    if (error != 0) {
                        result = "Debe completar los campos en rojo.";
                    }
                }
            }

            return result;
        }

        function GenerarDataAnalisis() {
            var Result = Validate();

            if (Result != '') {
                ToastError(Result);
            } else {
                var Seleccionados = $('.chkValidate:checked');
                $.each(Seleccionados, function (pos, Obj) {
                    var Id = $(Obj).data("id");
                    var Index = Paises.findIndex(f => f.Value == $("#Pais_" + Id).val());
                    Data.push({
                        'Id': Id,
                        'Correo': $("#Correo_" + Id).text(),
                        'Pais': Paises[Index]["Text"],
                        'Sucursal': $("#Sucursal_" + Id).val(),
                        'Gerencia': $("#Gerencia_" + Id).val(),
                        'Rol': $("#Rol_" + Id).val(),
                    })
                })

                var BaseOption = "<option value='0'>@Measure.Recursos.Recurso.Seleccione</option>";
                var html = BaseOption;

                var BasicPais = $.unique(Data.map(function (d) { return d.Pais; }));
                var _Paises = BasicPais.filter((v, i, a) => a.indexOf(v) === i);
                $("#Pais").html("");
                $.each(_Paises, function (pos, item) {
                    html += "<option value='" + item + "'>" + item + "</option>";
                });
                $("#Pais").html(html);
                var html = BaseOption;

                var BasicSucursal = $.unique(Data.map(function (d) { return d.Sucursal; }));
                var _Sucursales = BasicSucursal.filter((v, i, a) => a.indexOf(v) === i);
                $("#Sucursal").html("");
                $.each(_Sucursales, function (pos, item) {
                    html += "<option value='" + item + "'>" + item + "</option>";
                });
                $("#Sucursal").html(html);
                var html = BaseOption;

                var BasicGerencia = $.unique(Data.map(function (d) { return d.Gerencia; }));
                var _Gerencias = BasicGerencia.filter((v, i, a) => a.indexOf(v) === i);
                $("#Gerencia").html("");
                $.each(_Gerencias, function (pos, item) {
                    html += "<option value='" + item + "'>" + item + "</option>";
                });
                $("#Gerencia").html(html);
                var html = BaseOption;

                var BasicRol = $.unique(Data.map(function (d) { return d.Rol; }));
                var _Roles = BasicRol.filter((v, i, a) => a.indexOf(v) === i);
                $("#Rol").html("");
                $.each(_Roles, function (pos, item) {
                    html += "<option value='" + item + "'>" + item + "</option>";
                });
                $("#Rol").html(html);

                $('#smartwizard').smartWizard("next");
            }
        }

        function Filter() {
            
            if ($("#TipoDeAnalisis").val() == "0") {
                ToastError("Debe seleccionar un tipo de analísis.");
            } else {
                var SendData = Data;
                var Filtros = {
                    "TipoDeAnalisis": parseInt($("#TipoDeAnalisis").val())
                };
                
                if ($("#Pais").val() != "0") {
                    SendData = SendData.filter(f => f.Pais == $("#Pais").val());
                    Filtros["Pais"] = $("#Pais").val();
                }

                if ($("#Sucursal").val() != "0") {
                    SendData = SendData.filter(f => f.Sucursal == $("#Sucursal").val());
                    Filtros["Sucursal"] = $("#Sucursal").val();
                }

                if ($("#Gerencia").val() != "0") {
                    SendData = SendData.filter(f => f.Gerencia == $("#Gerencia").val());
                    Filtros["Gerencia"] = $("#Gerencia").val();
                }

                if ($("#Rol").val() != "0") {
                    SendData = SendData.filter(f => f.Rol == $("#Rol").val());
                    Filtros["Rol"] = $("#Rol").val();
                }
                $("#Data").val(JSON.stringify({ 'Encuestados': SendData, 'EncuestaId': $("#Encuestas").val(), 'Filtros': Filtros }));
                $("#FrmAnalisis").submit();
            }
            
        }

        function ToastError(message) {
            var type = 'danger';
            var duration = '5000';
            var ripple = true;
            var dismissible = true;
            var positionX = 'center';
            var positionY = 'top';

            window.notyf.open({
                type,
                message,
                duration,
                ripple,
                dismissible,
                position: {
                    x: positionX,
                    y: positionY
                }
            });
        }

        function Selected(Obj) {
            document.getElementById(Obj.name).value = Obj.value;
        }

        function divLoading() {
            $("#loader").toggle();
        }

        function loadSelect() {
            $('select').select2({
                "width": 'resolve',
                "theme": "bootstrap-5",
                "language": SelectedTranslate,
            });

            LoadDataTable("TblLista", null, true, null, 100, false);
            var TableHeight = $("#step-1").height() + 100;
            $(".tab-content").height(TableHeight);
            $("#divFiltro").show();
            divLoading();
        }
    </script>
}
