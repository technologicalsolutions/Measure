@using Measure.ViewModels.Maestra
@using Measure.ViewModels.Usuario
@model ViewDetailsMaster
@{
    ViewUser login = HttpContext.Current.Session["login"] as ViewUser;
    ViewBag.formShow = "show";
    ViewBag.MaestrasActive = "active";
    ViewBag.Title = "Detalles";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string Nombre = string.Empty;
    bool Base = (Model.Maestra.ClienteId == Guid.Empty);
}
@section style{
    @Styles.Render("~/Content/tables")
}
@section scriptsHead{
    @Scripts.Render("~/bundles/tables")
}
<div class="container">
    <div class="row">
        <div class="d-flex align-items-center p-2 my-2 text-white rounded shadow-sm custom-backgroun-2">
            <img class="me-2" src="@Url.Content("~/Content/images/Icono.png")" width="36">
            <div class="lh-1">
                <h1 class="h3 mb-0 text-white lh-1">Contenido Maestra @Model.Maestra.es_ES</h1>
            </div>
        </div>
    </div>
    <div class="row mt-4">
        <div class="col-lg-12 d-flex justify-content-between align-items-center">
            <button class="btn btn-primary btn-sm rounded-pill py-0" type="button" onclick="Crear()"><i class="bi-plus-circle"></i> Crear Contenido</button>
        </div>
    </div>
    <div class="row mt-4">
        <div class="col-lg-12">
            <div>
                <table class="table table-striped" style="width:100%" id="TblLista">
                    <thead>
                        <tr>
                            <th>
                                Español
                            </th>
                            <th>
                                Ingles
                            </th>
                            <th>
                                Portugues
                            </th>
                            <th>
                                Valor
                            </th>
                            <th class="text-center">
                                Acciones
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Lista)
                        {
                            <tr>
                                <td>@item.es_ES</td>
                                <td>@item.en_US</td>
                                <td>@item.pt_BR</td>
                                <td>@item.Valor</td>
                                <td width="30%">                                    
                                    <div class="row">
                                        <div class="col-12 col-md-6 text-center">
                                            <button class="btn btn-secondary btn-sm rounded-pill py-0 editLink" type="button" onclick="Editar('@(Json.Encode(item))')">Editar</button>
                                        </div>
                                        <div class="col-12 col-md-6 text-center">
                                            @{
                                                string Name = login.Idioma == 1 ? item.es_ES : login.Idioma == 2 ? item.en_US : item.pt_BR;
                                            }
                                            <button class="btn btn-danger btn-sm rounded-pill py-0 editLink" type="button" onclick="Eliminar(@item.Id,'@Name')">Inactivar</button>
                                        </div>
                                    </div>
                                </td>
                                
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@using (Html.BeginForm("InactiveDetail", "Maestra", FormMethod.Post, new { id = "MaestraDelete" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" name="id" id="DeleteEnc" value="" />
}
@section ModalSection{
    <div class="modal fade" tabindex="-1" id="MaestraModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="TitleModalAccion"></h5>
                    <button type="button" class="btn-close" onclick="CloseModal('MaestraModal')"></button>
                </div>
                @using (Html.BeginForm("CreateOrEditDetail", "Maestra", FormMethod.Post, new { id = "FrmMaestra" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.Modelo.Id)
                    @Html.HiddenFor(model => model.Acciones)
                    @Html.HiddenFor(model => model.Modelo.MaestraId)                    
                    <div class="modal-body">
                        <div class="row mt-2">
                            <label class="form-label col-3">Texto Español</label>
                            <div class="form-group col-9">
                                @Html.TextBoxFor(m => m.Modelo.es_ES, new { @class = "form-control", required = "required" })
                            </div>
                        </div>
                        <div class="row mt-2">
                            <label class="form-label col-3">Texto Ingles</label>
                            <div class="form-group col-9">
                                @Html.TextBoxFor(m => m.Modelo.en_US, new { @class = "form-control", required = "required" })
                            </div>
                        </div>
                        <div class="row mt-2">
                            <label class="form-label col-3">Texto Portuges</label>
                            <div class="form-group col-9">
                                @Html.TextBoxFor(m => m.Modelo.pt_BR, new { @class = "form-control", required = "required" })
                            </div>
                        </div>
                        <div class="row mt-2">
                            <label class="form-label col-3">Valor</label>
                            <div class="form-group col-9">
                                @Html.TextBoxFor(m => m.Modelo.Valor, new { @class = "form-control", required = "required" })
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="form-check">
                                @Html.RadioButtonFor(m => m.Modelo.Estado, true, new { @class = "form-check-input" })
                                <label class="form-check-label" for="flexCheckChecked">
                                    @Measure.Recursos.Recurso.EstadoActivo
                                </label>
                            </div>
                            <div class="form-check">
                                @Html.RadioButtonFor(m => m.Modelo.Estado, false, new { @class = "form-check-input" })
                                <label class="form-check-label" for="flexCheckChecked">
                                    @Measure.Recursos.Recurso.EstadoInactivo
                                </label>
                            </div>                           
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="reset" class="btn btn-danger">Limpiar</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                        <button type="submit" class="btn btn-primary">Guardar</button>
                    </div>
                }
            </div>
        </div>
    </div>
}
@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            LoadDataTable("TblLista", false, true, null, 10);
        });

        function Crear() {
            $("#TitleModalAccion").text("Crear Contenido");
            $("#TitleModal").val(0);
            $("#Modelo_es_ES").val('');
            $("#Modelo_en_US").val('');
            $("#Modelo_pt_BR").val('');
            $("#Modelo_Valor").val('');
            $("#Modelo_Activo").prop("checked", false);
            ShowModal("MaestraModal");
        }

        function Editar(Model) {
            var Data = JSON.parse(Model);
            $("#TitleModal").html("Editar Contenido");
            $("#Acciones").val(2);
            $("#Modelo_Id").val(Data.Id);
            $("#Modelo_es_ES").val(Data.en_US);
            $("#Modelo_en_US").val(Data.es_ES);
            $("#Modelo_pt_BR").val(Data.pt_BR);
            $("#Modelo_Valor").val(Data.Valor);
            $("#Modelo_MaestraId").val(Data.ClienteId);

            if ($("#ClienteId option").length > 0) {
                $("#ClienteId").val(Data.ClienteId);
            }

            $("#Modelo_Activo").prop("checked", Data.Activo);
            ShowModal("MaestraModal");
        }

        function Eliminar(Id, Nombre) {
            Swal.fire({
                title: '¿Estas seguro?',
                text: "Desea Inactivar el contenido " + Nombre,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                cancelButtonText: 'No',
                confirmButtonText: 'Sí, bórralo'
            }).then((result) => {
                if (result.value) {
                    $("#DeleteEnc").val(Id);
                    Swal.fire(
                        'Exito!',
                        'Tu registro ha sido eliminado.',
                        'success'
                    )
                    $("#MaestraDelete").submit();
                }
            });
        }

        function AsignarValor(obj) {
            document.getElementById(obj.name).value = obj.value;
        }
    </script>
}